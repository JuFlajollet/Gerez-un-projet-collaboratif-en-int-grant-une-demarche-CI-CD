name: GitHub Actions For Back

on:
  push:
    branches: [main, develop, create-github-actions]
  pull_request:
    branches: [main, develop, create-github-actions]

jobs:
  java-test-and-build:
    name: Java Test And Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back
    strategy:
      matrix:
        java-version: [ 21 ]
        # See supported Java release schedule at https://www.oracle.com/java/technologies/java-se-support-roadmap.html
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v4
      - name: Use Java ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "adopt"
      - name: Build App with Maven
        run: mvn clean compile
      - name: Run Tests with Maven & Generate Jacoco Coverage
        run: mvn test
      - name: Upload Jacoco Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage
          path: ./back/target/site/jacoco
      - name: Package App with Maven
        run: mvn package -DSkipTests
      - name: Sonar Scan Back
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./back
          args: >
            -Dsonar.organization=juflajollet
            -Dsonar.projectKey=JuFlajollet_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
            -Dsonar.coverage.exclusions=target/**,src/test/*
            -Dsonar.exclusions=target/**
            -Dsonar.verbose=true
      - name: Set up QEMU for Docker
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          file: ./back/Dockerfile
          context: ./back
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/app:latest
